// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.isCi = Boolean.parseBoolean(System.getProperty('CI', 'false'))

    ext.versions = [
            'supportLibrary' : '28.0.0'
    ]

    ext.deps = [
            'support' : [
                    'appcompat' : "com.android.support:appcompat-v7:${versions.supportLibrary}",
                    'design' : "com.android.support:design:${versions.supportLibrary}",
                    'recyclerview' : "com.android.support:recyclerview-v7:${versions.supportLibrary}",
                    'cardview' : "com.android.support:cardview-v7:${versions.supportLibrary}",
                    'exifinterface' : "com.android.support:exifinterface:${versions.supportLibrary}"
            ]
    ]


    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}


subprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            // Force all of the primary support libraries to use the same version.
            if (details.requested.group == 'com.android.support'
                    && details.requested.name != 'multidex'
                    && details.requested.name != 'multidex-instrumentation') {
                details.useVersion versions.supportLibrary
            }
            // Force all the error-prone dependencies to use the same version.
            if (details.requested.group == 'com.google.errorprone'
                    && details.requested.name.startsWith('error_prone_')) {
                details.useVersion versions.errorProne
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
